----------------------------------- FONCTIONNAL

From seeds, get sitemaps, extrat them, get url, add to the queue



start:
- task?
- queue?
- remote service?
- http via members?

sources
on start






Node
  - spiders
  - 

----------------------------------- TECH


DnsResolver
  .site.com ----> www.site.com DNS caching
  www cname records

LinkChecker

UrlFetcher

PageMetadataRepository

WebPageRepository

PlanRepository

DocumentRepository

StatsRegistry


----------------------------------- API
  output:
    - name: In cassandra
      type: cassandra
      props:
        key: value
        key: value

    - name: In ZeroMQ
      type: zmq
      props:
        key: value
        key: value


Plan request:
{
   "sources":[
      {
         "type":"seed",
         "seeds":[
            "www.example.org",
            "example.org/home"
         ]
      },
      {
         "type":"twitter",
         "query":"mandrel"
      }
   ],
   "politeness":{
      "ignore_robot_txt":false,
      "max":1000
   },
   "filters":[
      {
         "type":"large"
      },
      {
         "type":"only_seeds_domain"
      },
      {
         "type":"on_domains"
      },
      {
         "type":"not",
         "filter":
            {
               "type":"statics"
            }
      },
      {
         "type":"statics"
      },
      {
         "name":"xxxx",
         "type":"groovy",
         "value":"seeds.domain.contains($url.domain)"
      },
      {
         "type":"patterns",
         "value":[
            "/signin",
            "/contact"
         ]
      }
   ],
   "stores":{
      "_webpage":{
         "type":"jdbc",
         "url":"..."
      },
      "_pagemetadata":{
         "type":"jdbc",
         "url":"..."
      }
   },
   "outlinks":{
       "extractor":{
          "type":"css",
          "value":"a href",
          "source":"body"
       },
       "formatter":{
          "type":"groovy",
          "value":"data.toLowerCase"
       }
   },
   "extractors":[
      {
         "name":"video",
         "store":{
            "type":"jdbc",
            "url":"..."
         },
         "filters":[
            {
               "type":"patterns",
               "value":[
                  "/user",
                  "/account"
               ]
            }
         ],
         "fields":[
            {
               "title":{
                  "extractor":{
                     "type":"css",
                     "value":"a href",
                     "source":"body"
                  },
                  "formatter":{
                     "type":"groovy",
                     "value":"data.toLowerCase"
                  }
               }
            },
            {
               "description":{
                  "extractor":{
                     "type":"css",
                     "value":"a href",
                     "source":"body"
                  },
                  "formatter":{
                     "type":"groovy",
                     "value":"data.toLowerCase"
                  }
               }
            }
         ]
      }
   ]
}


#Â Spider
POST	/plan/add
req:

resp:
{
  "id" : "123"
  "state" : "running/cancelled/pause/done"
  "stats" : {
    "max" : "",
    "min" : "",
    "mean" : ""
  }
}

GET	/plan/{planId}/status

POST	/plan/{planId}/pause

POST	/plan/{planId}/restart

DELETE	/plan/{planId}/cancel

GET	/plans

# Other
GET 	/
{
  "version" : "0.0.2-rev2"
  "name" : "qsdqsd"
  "group" : "qsdqsd"
}

GET 	/nodes

GET 	/health

GET 	/stats
HTTP requests 161,549,811
network errors 5,873,685
read timeout exceeded errors 2,288,084
robots.txt requests 16,933,942
successful non-robots requests 138,742,184
average size of page 13,354 bytes
total data size 1.85 TB


----------------------------------- CONFIGURATION
ui:
  enabled: true
  port: 80

spider:
  # Http client configuration
  client:
    user_agents:
      strategy: fix
      #strategy: file
      #strategy: adaptive
    timeout:
      request:
      connection: 
    channel: nio/epool/io
    max_retry: 3
    redirect:
      enabled: true
      max: 3
    compression:
      enabled: true
      level: 3
    
    connections:
      per_host: 10
      total: 100

    politeness:
      rate: 
        global: 1000
        per_node: 500
      max: 1000
      wait: 100ms
      ignore_robot_txt: false

    dns:
      cache:
        enabled: true
        type: local
        props:
          strategy: lru
          max_entries: 1000

    proxy:
      enabled: false
      host:
      port:
      protocol:
      credentials:
        username:
        password: 

  filters:
    - name: non_statics
      type: pattern
      data: ".*(\\.(css|js|bmp|gif|jpe?g|png|tiff?|mid|mp2|mp3|mp4|wav|avi|mov|mpeg|ram|m4v|pdf|rm|smil|wmv|swf|wma|zip|rar|gz))$"
    - name: images
      type: pattern
      data: ".*(\\.(bmp|gif|jpe?g|png|tiff?))$"
    - name: too_large
      type: groovy
      data: "$size < $value"
      value: 500ko
    - name: same_domain
      type: groovy
      data: "seeds.domain.contains($url.domain)"
    - name: exclude
      type: groovy
      data: "..."
      value: null
  
network:

  group:
    name: default
    password: null

  tcp:
    no_delay: true
    keep_alive: true
    reuse_address: true
    send_buffer_size: null
    receive_buffer_size : null
    connect_timeout: 15s

  interfaces:
    - 10.0.0.*

  ssl:
    enabled: false
    type: basic
    props:
      key_store:
      key_store_password:
      key_manager_algorithm:
      trust_manager_algorithm
      protocol:
 
  discovery:
    unicast
      enabled: true
        
    multicast
      enabled: true
      group: 224.2.2.4
      port: 54328
      ttl: 3
      address: null
  
    ec2
      enabled: false
      access_key:
      secret_key: 
      *region: us-east-1
      *security-group-name: 
      *tag-key: 
      *tag-value: 
    
